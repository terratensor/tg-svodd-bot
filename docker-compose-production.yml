version: "3.9"

services:
  tg-svodd-bot:
    image: ${REGISTRY}/tg-svodd-bot:${IMAGE_TAG}
    build:
      context: ./
      dockerfile: Dockerfile
    networks:
      - rmq-net
      - tg-bot-net
      - svodd-network
    environment:
      APP_ENV: prod
      RABBIT_SERVER_URL: amqp://rmq
      RABBIT_EXCHANGE_NAME: ex1
      TG_CHAT_ID: "@svoddru"
      Q1: rabbit://q1
      TG_BOT_TOKEN_FILE: /run/secrets/tg_bot_token
      SENTRY_DSN_FILE: /run/secrets/sentry_dsn
      POSTGRES_HOST: ${APP_POSTGRES_HOST}
      POSTGRES_USER: ${APP_POSTGRES_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/app_db_password
      POSTGRES_DB: ${APP_POSTGRES_DB}
      QUOTE_MAX_WORDS: 40
      QUOTE_MAX_CHARS: 350
      MSG_MAX_CHARS: 4096
    secrets:
      - tg_bot_token
      - sentry_dsn
      - app_db_password
    command: './tg-svodd-bot'
    deploy:
      placement:
        constraints: [ node.labels.worker == worker-1 ]
      restart_policy:
        condition: on-failure

secrets:
  tg_bot_token:
    file: ${APP_TG_BOT_TOKEN_FILE}
  sentry_dsn:
    file: ${APP_SENTRY_DSN_FILE}
  app_db_password:
    file: ${APP_DB_PASSWORD_FILE}

networks:
  rmq-net:
    name: rmq-net
    external: true
  svodd-network:
    name: svodd-network
    external: true
  tg-bot-net:
