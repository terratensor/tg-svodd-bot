version: "3.9"

services:
  registry:
    image: registry:2
    container_name: registry
    ports:
      - "5000:5000"
    restart: always
    networks:
      - tg-bot-net

  tg-svodd-bot:
    image: ${REGISTRY:-localhost:5000}/tg-svodd-bot:main-1
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - registry
    networks:
      - rmq-net
      - tg-bot-net
      - svodd-network
    environment:
      APP_ENV: dev
      RABBIT_SERVER_URL: amqp://rmq
      RABBIT_EXCHANGE_NAME: ex1
      TG_CHAT_ID: "-1001700331408"
      Q1: rabbit://q1
      TG_BOT_TOKEN_FILE: /run/secrets/tg_bot_token
      SENTRY_DSN_FILE: /run/secrets/sentry_dsn
      POSTGRES_HOST: app-postgres
      POSTGRES_USER: app
      POSTGRES_PASSWORD_FILE: /run/secrets/app_db_password
      POSTGRES_DB: app
      QUOTE_MAX_WORDS: 40
      QUOTE_MAX_CHARS: 350
    secrets:
      - tg_bot_token
      - sentry_dsn
      - app_db_password
    command: './tg-svodd-bot'
    deploy:
      restart_policy:
        condition: on-failure

secrets:
  tg_bot_token:
    file: ./docker/development/secrets/tg_bot_token
  sentry_dsn:
    file: ./docker/development/secrets/sentry_dsn
  app_db_password:
    file: ./docker/development/secrets/app_db_password

networks:
  rmq-net:
    name: rmq-net
  tg-bot-net:
  svodd-network:
    name: svodd-network
    external: true
